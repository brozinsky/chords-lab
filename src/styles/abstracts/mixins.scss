// -----------------------------------------------------------------------------
// Media queries mixins - mobile first, tailwind breakpoints
// -----------------------------------------------------------------------------

$xsm-width: 320px;
$sm-width: 640px;
$md-width: 768px;
$lg-width: 1024px;
$xl-width: 1280px;
$xxl-width: 1536px;
$xxxl-width: 1660px;

@mixin xsm {
  @media (min-width: #{$xsm-width}) {
    @content;
  }
}
@mixin sm {
  @media (min-width: #{$sm-width}) {
    @content;
  }
}
@mixin md {
  @media (min-width: #{$md-width}) {
    @content;
  }
}
@mixin lg {
  @media (min-width: #{$lg-width}) {
    @content;
  }
}
@mixin xl {
  @media (min-width: #{$xl-width}) {
    @content;
  }
}
@mixin xxl {
  @media (min-width: #{$xxl-width}) {
    @content;
  }
}
@mixin xxxl {
  @media (min-width: #{$xxxl-width}) {
    @content;
  }
}

/// Mixin to place items on a circle
/// @author Kitty Giraudel
/// @author Ana Tudor
/// @param {Integer} $item-count - Number of items on the circle
/// @param {Length} $circle-size - Large circle size
/// @param {Length} $item-size - Single item size
@mixin on-circle($item-count, $circle-size, $item-size) {
  position: relative;
  width: $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none;

  > * {
    display: block;
    position: absolute;
    top: 50%;
    left: 50%;
    width: $item-size;
    height: $item-size;
    margin: -(calc($item-size / 2));

    $angle: calc(360 / $item-count);
    $rot: 0;

    @for $i from 1 through $item-count {
      &:nth-of-type(#{$i}) {
        transform: rotate($rot * 1deg - 90deg)
          translate(calc($circle-size / 2))
          rotate($rot * -1deg + 90deg);
      }

      $rot: $rot + $angle;
    }
  }
}
